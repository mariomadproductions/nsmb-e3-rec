#---------------------------------------------------------------------------
#  Project:  NitroSDK - tools - makelcf
#  File:     ARM9-TS-cloneboot.lcf.template
#
#  Copyright 2003-2006 Nintendo.  All rights reserved.
#
#  These coded instructions, statements, and computer programs contain
#  proprietary information of Nintendo of America Inc. and/or Nintendo
#  Company Ltd., and are protected by Federal copyright law.  They may
#  not be disclosed to third parties or copied or duplicated in any form,
#  in whole or in part, without the prior written consent of Nintendo.
#
#  $Log: ARM9-TS-cloneboot-C.lcf.template,v $
#  Revision 1.3  2006/07/20 07:29:12  kitase_hirotake
#  Added the description explaining the version section
#
#  Revision 1.2  2006/03/30 00:31:29  yasu
#  revised NUMBER_OVERLAYS to NUMBER.OVERLAYS
#
#  Revision 1.1  2005/09/05 01:38:31  yasu
#  Record template before editing tags
#
#  Revision 1.8  2005/08/26 11:22:16  yasu
#  overlay support for ITCM/DTCM
#
#  Revision 1.7  2005/06/20 12:29:20  yasu
#  Changed Surffix to Suffix
#
#  Revision 1.6  2005/06/14 09:03:42  yada
#  fix around minus value of SDK_STACKSIZE
#
#  Revision 1.5  2005/05/19 03:22:51  yosizaki
#  add .sinit section.
#
#  Revision 1.4  2005/04/13 12:52:03  terui
#  Change SDK_AUTOLOAD_DTCM_START 0x027c0000 -> 0x027e0000
#
#  Revision 1.3  2005/03/30 00:02:14  yosizaki
#  fix copyright header.
#
#  Revision 1.2  2005/03/25 12:54:59  yasu
#  Include .version section
#
#  Revision 1.1  2004/11/24 09:40:22  yasu
#  lcf template for cloneboot
#
#  Revision 1.2  2004/11/05 04:23:38  yasu
#  Add OverlayTable digest
#
#  Revision 1.1  2004/11/05 00:04:13  yasu
#  Add DIGEST
#
#  Revision 1.2  2004/09/24 06:26:28  yasu
#  crt0.o moves into common-A
#
#  Revision 1.1  2004/09/24 06:13:50  yasu
#  Newly created for mb-clone boot
#
#  $NoKeywords: $
#---------------------------------------------------------------------------
MEMORY
{
	<STATIC.NAME>           (RWX) : ORIGIN = <STATIC.ADDRESS>,   LENGTH = 0x0 >  <STATIC.NAME><PROPERTY.SUFFIX>
	<FOREACH.AUTOLOADS>
	<AUTOLOAD.NAME>         (RWX) : ORIGIN = <AUTOLOAD.ADDRESS>, LENGTH = 0x0 >> <STATIC.NAME><PROPERTY.SUFFIX>
	<END.AUTOLOADS>
	AUTOLOAD_INFO__		(RWX) : ORIGIN = 0, LENGTH = 0x0 >> <STATIC.NAME><PROPERTY.SUFFIX>
	STATIC_FOOTER__		(RWX) : ORIGIN = 0, LENGTH = 0x0 >> <STATIC.NAME><PROPERTY.SUFFIX>
	
	<PROPERTY.OVERLAYDEFS>	(RW)  : ORIGIN = AFTER(<STATIC.NAME>), LENGTH = 0x0 > <PROPERTY.OVERLAYDEFS><PROPERTY.SUFFIX>
	<PROPERTY.OVERLAYTABLE>	(RW)  : ORIGIN = AFTER(<STATIC.NAME>), LENGTH = 0x0 > <PROPERTY.OVERLAYTABLE><PROPERTY.SUFFIX>
	<FOREACH.OVERLAYS>
	<OVERLAY.NAME>          (RWXO): ORIGIN = <OVERLAY.ADDRESS>, LENGTH = 0x0 > <OVERLAY.NAME><PROPERTY.SUFFIX>
	<END.OVERLAYS>
	MAIN_EX__		(RW)  : ORIGIN = 0x02400000, LENGTH = 0x0
	ARENA__			(RW)  : ORIGIN = AFTER(<STATIC.NAME><FOREACH.OVERLAYS=MAIN>,<OVERLAY.NAME><END.OVERLAYS>), LENGTH = 0x0
	ARENA_EX__		(RW)  : ORIGIN = AFTER(MAIN_EX__<FOREACH.OVERLAYS=MAINEX>,<OVERLAY.NAME><END.OVERLAYS>), LENGTH = 0x0
	ARENA_ITCM__		(RW)  : ORIGIN = AFTER(ITCM<FOREACH.OVERLAYS=ITCM>,<OVERLAY.NAME><END.OVERLAYS>), LENGTH = 0x0
	ARENA_DTCM__		(RW)  : ORIGIN = AFTER(DTCM<FOREACH.OVERLAYS=DTCM>,<OVERLAY.NAME><END.OVERLAYS>), LENGTH = 0x0
	MODULE_FILES__		(RW)  : ORIGIN = 0x0, LENGTH = 0x0     > component.files
	ITCM__			(RWX) : ORIGIN = 0x0, LENGTH = 0x08000 > itcm.check
	DTCM__			(RW)  : ORIGIN = 0x0, LENGTH = 0x04000 > dtcm.check
	COMMON__		(RW)  : ORIGIN = 0x0, LENGTH = 0x01000 > common.check
	PARENT__		(RW)  : ORIGIN = 0x0, LENGTH = 0x02000 > parent.check
}

FORCE_ACTIVE
{
	SVC_SoftReset
}

KEEP_SECTION
{
	.sinit
}

SECTIONS
{
	############################ STATIC #################################
	.<STATIC.NAME>:
	{
	ALIGNALL(4);			. = ALIGN(32);	# Fit to cache line
	
	#
	#  TEXT BLOCK: READ ONLY
	#
	SDK_STATIC_START		=.;
	SDK_STATIC_TEXT_START		=.;
					#:::::::::: text/rodata
					
					#:: Common A ----- 4KB
	SDK_STATIC_TEXT_COMMON_START	=.;
					libsyscall.a (.text)
					crt0.o (.text)
					crt0.o (.rodata)
					#
					# Adding version section.
					# The information included in this section will be required during lot check, so this position must be kept.
					#
					* (.version)
	SDK_STATIC_TEXT_COMMON_END	=.;
					.= SDK_STATIC_START +  4 * 1024;
					
					#:: Parent Only -- 8KB
	SDK_STATIC_TEXT_PARENT_START	=.;
	#
	# Collected .parent section code
	# Notice that .bss, .data section code is not included!
					* (.parent)
	#
	SDK_STATIC_TEXT_PARENT_END	=.;
					.= SDK_STATIC_START + 12 * 1024;
					
					#:: Common B ----- 4KB + ...
					OBJECT(NitroMain,*)
					<FOREACH.STATIC.OBJECTS=.text>
					<STATIC.OBJECT=.text:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.text>
					<STATIC.LIBRARY=.text:t>
					<END.STATIC.LIBRARIES>
					. = ALIGN(4);
					* (.exception)
					. = ALIGN(4);
	SDK_STATIC_ETABLE_START		=.;
					EXCEPTION
	SDK_STATIC_ETABLE_END		=.;
					. = ALIGN(4);
					<FOREACH.STATIC.OBJECTS=.init>
					<STATIC.OBJECT=.init:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.init>
					<STATIC.LIBRARY=.init:t>
					<END.STATIC.LIBRARIES>
					. = ALIGN(4);
					<FOREACH.STATIC.OBJECTS=.rodata>
					<STATIC.OBJECT=.rodata:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.rodata>
					<STATIC.LIBRARY=.rodata:t>
					<END.STATIC.LIBRARIES>
					. = ALIGN(4);

	SDK_STATIC_SINIT_START		=.;
					#:::::::::: ctor
					<FOREACH.STATIC.OBJECTS=.ctor>
					<STATIC.OBJECT=.ctor:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.ctor>
					<STATIC.LIBRARY=.ctor:t>
					<END.STATIC.LIBRARIES>
					<FOREACH.STATIC.OBJECTS=.sinit>
					<STATIC.OBJECT=.sinit:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.sinit>
					<STATIC.LIBRARY=.sinit:t>
					<END.STATIC.LIBRARIES>
					WRITEW	0;
					#:::::::::: ctor
	SDK_STATIC_SINIT_END		=.;

					#:::::::::: text/rodata
					. = ALIGN(32);
	SDK_STATIC_TEXT_END		=.;
	
	#
	#  DATA BLOCK: READ WRITE
	#
	SDK_STATIC_DATA_START		=.;
					#:::::::::: data
					<FOREACH.STATIC.OBJECTS=.sdata>
					<STATIC.OBJECT=.sdata:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.sdata>
					<STATIC.LIBRARY=.sdata:t>
					<END.STATIC.LIBRARIES>
					. = ALIGN(4);
					<FOREACH.STATIC.OBJECTS=.data>
					<STATIC.OBJECT=.data:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.data>
					<STATIC.LIBRARY=.data:t>
					<END.STATIC.LIBRARIES>
					. = ALIGN(4);

	SDK_OVERLAYTABLE_DIGEST		=.;
					. = . + 20;
	SDK_OVERLAYTABLE_DIGEST_END	=.;
	SDK_OVERLAY_DIGEST		=.;
					. = . + <NUMBER.OVERLAYS> * 20;
	SDK_OVERLAY_DIGEST_END		=.;

					#:::::::::: data
					. = ALIGN(32);
	SDK_STATIC_DATA_END		=.;
	SDK_STATIC_END			=.;

	SDK_STATIC_TEXT_SIZE		= SDK_STATIC_TEXT_END - SDK_STATIC_TEXT_START;
	SDK_STATIC_DATA_SIZE		= SDK_STATIC_DATA_END - SDK_STATIC_DATA_START;
	SDK_STATIC_SIZE			= SDK_STATIC_END      - SDK_STATIC_START;
	__sinit__			= SDK_STATIC_SINIT_START;	# for static initializer
	__exception_table_start__	= SDK_STATIC_ETABLE_START;	# for exception table
	__exception_table_end__		= SDK_STATIC_ETABLE_END;	# for exception table
	} > <STATIC.NAME>

	.<STATIC.NAME>_bss:
	{
	ALIGNALL(4);			. = ALIGN(32);

	#
	#  BSS BLOCK
	#
	SDK_STATIC_BSS_START		=.;
					#:::::::::: bss
					<FOREACH.STATIC.OBJECTS=.sbss>
					<STATIC.OBJECT=.sbss:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.sbss>
					<STATIC.LIBRARY=.sbss:t>
					<END.STATIC.LIBRARIES>
					. = ALIGN(4);
					<FOREACH.STATIC.OBJECTS=.bss>
					<STATIC.OBJECT=.bss:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.bss>
					<STATIC.LIBRARY=.bss:t>
					<END.STATIC.LIBRARIES>
					. = ALIGN(4);
					#:::::::::: bss
					. = ALIGN(32);
	SDK_STATIC_BSS_END		= .;
	SDK_STATIC_BSS_SIZE		= SDK_STATIC_BSS_END - SDK_STATIC_BSS_START;

	} >> <STATIC.NAME>
	
	
	############################ AUTOLOADS ##############################
	SDK_AUTOLOAD_ITCM_START			= 0x01ff8000;
	SDK_AUTOLOAD_ITCM_END			= SDK_AUTOLOAD_ITCM_START;
	SDK_AUTOLOAD_ITCM_BSS_END		= SDK_AUTOLOAD_ITCM_START;
	SDK_AUTOLOAD_DTCM_START			= 0x027e0000;
	SDK_AUTOLOAD_DTCM_END			= SDK_AUTOLOAD_DTCM_START;
	SDK_AUTOLOAD_DTCM_BSS_END		= SDK_AUTOLOAD_DTCM_START;
	SDK_AUTOLOAD_START			= SDK_STATIC_END;
	SDK_AUTOLOAD_SIZE			= 0;
	SDK_AUTOLOAD_NUMBER			= <NUMBER.AUTOLOADS>;

<FOREACH.AUTOLOADS>
	.<AUTOLOAD.NAME>:
	{
	ALIGNALL(4);				. = ALIGN(32);
	
	#
	#   TEXT BLOCK: READ ONLY
	#
	SDK_AUTOLOAD_<AUTOLOAD.NAME>_ID		=<AUTOLOAD.ID>;
	SDK_AUTOLOAD_<AUTOLOAD.NAME>_START	=.;
	SDK_AUTOLOAD_<AUTOLOAD.NAME>_TEXT_START	=.;
						#:::::::::: text/rodata
						<FOREACH.AUTOLOAD.OBJECTS=.text>
						<AUTOLOAD.OBJECT=.text:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.text>
						<AUTOLOAD.LIBRARY=.text:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.AUTOLOAD.OBJECTS=.itcm>
						<AUTOLOAD.OBJECT=.itcm:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.itcm>
						<AUTOLOAD.LIBRARY=.itcm:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.AUTOLOAD.OBJECTS=.rodata>
						<AUTOLOAD.OBJECT=.rodata:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.rodata>
						<AUTOLOAD.LIBRARY=.rodata:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						#:::::::::: text/rodata
	SDK_AUTOLOAD_<AUTOLOAD.NAME>_TEXT_END	=.;

	#
	#  DATA BLOCK: READ WRITE BLOCK
	#
	SDK_AUTOLOAD_<AUTOLOAD.NAME>_DATA_START	=.;
						#:::::::::: data
						<FOREACH.AUTOLOAD.OBJECTS=.sdata>
						<AUTOLOAD.OBJECT=.sdata:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.sdata>
						<AUTOLOAD.LIBRARY=.sdata:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.AUTOLOAD.OBJECTS=.data>
						<AUTOLOAD.OBJECT=.data:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.data>
						<AUTOLOAD.LIBRARY=.data:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.AUTOLOAD.OBJECTS=.dtcm>
						<AUTOLOAD.OBJECT=.dtcm:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.dtcm>
						<AUTOLOAD.LIBRARY=.dtcm:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						#:::::::::: data
						. = ALIGN(32);
	SDK_AUTOLOAD_<AUTOLOAD.NAME>_DATA_END	=.;
	SDK_AUTOLOAD_<AUTOLOAD.NAME>_END	=.;
	
	SDK_AUTOLOAD_<AUTOLOAD.NAME>_TEXT_SIZE	= SDK_AUTOLOAD_<AUTOLOAD.NAME>_TEXT_END - SDK_AUTOLOAD_<AUTOLOAD.NAME>_TEXT_START;
	SDK_AUTOLOAD_<AUTOLOAD.NAME>_DATA_SIZE	= SDK_AUTOLOAD_<AUTOLOAD.NAME>_DATA_END - SDK_AUTOLOAD_<AUTOLOAD.NAME>_DATA_START;
	SDK_AUTOLOAD_<AUTOLOAD.NAME>_SIZE	= SDK_AUTOLOAD_<AUTOLOAD.NAME>_END      - SDK_AUTOLOAD_<AUTOLOAD.NAME>_START;
	SDK_AUTOLOAD_SIZE			= SDK_AUTOLOAD_SIZE + SDK_AUTOLOAD_<AUTOLOAD.NAME>_SIZE;

	} > <AUTOLOAD.NAME>

	.<AUTOLOAD.NAME>_bss:
	{
	ALIGNALL(4);				. = ALIGN(32);
	
	#
	#  BSS BLOCK
	#
	SDK_AUTOLOAD_<AUTOLOAD.NAME>_BSS_START	= .;
						#:::::::::: bss
						<FOREACH.AUTOLOAD.OBJECTS=.sbss>
						<AUTOLOAD.OBJECT=.sbss:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.sbss>
						<AUTOLOAD.LIBRARY=.sbss:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.AUTOLOAD.OBJECTS=.bss>
						<AUTOLOAD.OBJECT=.bss:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.bss>
						<AUTOLOAD.LIBRARY=.bss:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						#:::::::::: bss
						. = ALIGN(32);
	SDK_AUTOLOAD_<AUTOLOAD.NAME>_BSS_END	= .;

	SDK_AUTOLOAD_<AUTOLOAD.NAME>_BSS_SIZE	= SDK_AUTOLOAD_<AUTOLOAD.NAME>_BSS_END - SDK_AUTOLOAD_<AUTOLOAD.NAME>_BSS_START;

	} >> <AUTOLOAD.NAME>

<END.AUTOLOADS>

	############################ AUTOLOAD_INFO ##########################
	.AUTOLOAD_INFO__:
	{
<FOREACH.AUTOLOADS>
		WRITEW ADDR(.<AUTOLOAD.NAME>);
		WRITEW SDK_AUTOLOAD_<AUTOLOAD.NAME>_SIZE;
		WRITEW SDK_AUTOLOAD_<AUTOLOAD.NAME>_BSS_SIZE;
<END.AUTOLOADS>
	} > AUTOLOAD_INFO__
	
	SDK_AUTOLOAD_LIST			= SDK_AUTOLOAD_START + SDK_AUTOLOAD_SIZE;
	SDK_AUTOLOAD_LIST_END			= SDK_AUTOLOAD_START + SDK_AUTOLOAD_SIZE + SIZEOF(.AUTOLOAD_INFO__);
	SDK_AUTOLOAD_SIZE			= SDK_AUTOLOAD_SIZE  + SIZEOF(.AUTOLOAD_INFO__);
	
	############################ STATIC_FOOTER ##########################
	.STATIC_FOOTER__:
	{
		WRITEW 0xdec00621;		# LE(0x2106C0DE) = NITRO CODE
		WRITEW _start_ModuleParams - ADDR(.<STATIC.NAME>);
		WRITEW SDK_OVERLAY_DIGEST  - ADDR(.<STATIC.NAME>);
	} > STATIC_FOOTER__
	
	############################ OVERLAYS ###############################
	SDK_OVERLAY_NUMBER 			= <NUMBER.OVERLAYS>;

<FOREACH.OVERLAYS>
	.<OVERLAY.NAME>:
	{
	ALIGNALL(4);				. = ALIGN(32);
	
	#
	#   TEXT BLOCK: READ ONLY
	#
	SDK_OVERLAY_<OVERLAY.NAME>_ID		=<OVERLAY.ID>;	### SEGMENT <OVERLAY.NAME> OVERLAY ID
	SDK_OVERLAY_<OVERLAY.NAME>_START	=.;
	SDK_OVERLAY_<OVERLAY.NAME>_TEXT_START	=.;
						#:::::::::: text/rodata
						<FOREACH.OVERLAY.OBJECTS=.text>
						<OVERLAY.OBJECT=.text:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.text>
						<OVERLAY.LIBRARY=.text:t>
						<END.OVERLAY.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.OVERLAY.OBJECTS=.rodata>
						<OVERLAY.OBJECT=.rodata:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.rodata>
						<OVERLAY.LIBRARY=.rodata:t>
						<END.OVERLAY.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.OVERLAY.OBJECTS=.init>
						<OVERLAY.OBJECT=.init:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.init>
						<OVERLAY.LIBRARY=.init:t>
						<END.OVERLAY.LIBRARIES>
						. = ALIGN(4);
	SDK_OVERLAY_<OVERLAY.NAME>_SINIT_START	=.;
						#:::::::::: ctor
						<FOREACH.OVERLAY.OBJECTS=.ctor>
						<OVERLAY.OBJECT=.ctor:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.ctor>
						<OVERLAY.LIBRARY=.ctor:t>
						<END.OVERLAY.LIBRARIES>
						<FOREACH.OVERLAY.OBJECTS=.sinit>
						<OVERLAY.OBJECT=.sinit:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.sinit>
						<OVERLAY.LIBRARY=.sinit:t>
						<END.OVERLAY.LIBRARIES>
						WRITEW	0;
						#:::::::::: ctor
	SDK_OVERLAY_<OVERLAY.NAME>_SINIT_END	=.;

						#:::::::::: text/rodata
						. = ALIGN(32);
	SDK_OVERLAY_<OVERLAY.NAME>_TEXT_END	=.;

	#
	#  DATA BLOCK: READ WRITE
	#
	SDK_OVERLAY_<OVERLAY.NAME>_DATA_START	=.;
						#:::::::::: data
						<FOREACH.OVERLAY.OBJECTS=.sdata>
						<OVERLAY.OBJECT=.sdata:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.sdata>
						<OVERLAY.LIBRARY=.sdata:t>
						<END.OVERLAY.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.OVERLAY.OBJECTS=.data>
						<OVERLAY.OBJECT=.data:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.data>
						<OVERLAY.LIBRARY=.data:t>
						<END.OVERLAY.LIBRARIES>
						. = ALIGN(4);
						#:::::::::: data
						. = ALIGN(32);
	SDK_OVERLAY_<OVERLAY.NAME>_DATA_END	=.;
	SDK_OVERLAY_<OVERLAY.NAME>_END		=.;

	SDK_OVERLAY_<OVERLAY.NAME>_TEXT_SIZE	= SDK_OVERLAY_<OVERLAY.NAME>_TEXT_END - SDK_OVERLAY_<OVERLAY.NAME>_TEXT_START;
	SDK_OVERLAY_<OVERLAY.NAME>_DATA_SIZE	= SDK_OVERLAY_<OVERLAY.NAME>_DATA_END - SDK_OVERLAY_<OVERLAY.NAME>_DATA_START;
	SDK_OVERLAY_<OVERLAY.NAME>_SIZE		= SDK_OVERLAY_<OVERLAY.NAME>_END      - SDK_OVERLAY_<OVERLAY.NAME>_START;

	} > <OVERLAY.NAME>

	.<OVERLAY.NAME>_bss:
	{
	ALIGNALL(4);				. = ALIGN(32);
	
	#
	#  BSS BLOCK
	#
	SDK_OVERLAY_<OVERLAY.NAME>_BSS_START	= .;
						#:::::::::: bss
						<FOREACH.OVERLAY.OBJECTS=.bss>
						<OVERLAY.OBJECT=.bss:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.bss>
						<OVERLAY.LIBRARY=.bss:t>
						<END.OVERLAY.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.OVERLAY.OBJECTS=.sbss>
						<OVERLAY.OBJECT=.sbss:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.sbss>
						<OVERLAY.LIBRARY=.sbss:t>
						<END.OVERLAY.LIBRARIES>
						. = ALIGN(4);
						#:::::::::: bss
						. = ALIGN(32);
	SDK_OVERLAY_<OVERLAY.NAME>_BSS_END	= .;

	SDK_OVERLAY_<OVERLAY.NAME>_BSS_SIZE	= SDK_OVERLAY_<OVERLAY.NAME>_BSS_END - SDK_OVERLAY_<OVERLAY.NAME>_BSS_START;
	
	} >> <OVERLAY.NAME>

<END.OVERLAYS>
	
	
	############################ MAIN EX ##################################
	.MAIN_EX__:
	{
		. = ALIGN(32);
	} > MAIN_EX__
	
	
	############################ ARENA ##################################
	.ARENA__:
	{
						. = ALIGN(32);
		SDK_SECTION_ARENA_START		=.;
	} > ARENA__
	
	.ARENA_EX__:
	{
						. = ALIGN(32);
		SDK_SECTION_ARENA_EX_START	=.;
	} > ARENA_EX__
	
	.ARENA_ITCM__:
	{
						. = ALIGN(32);
		SDK_SECTION_ARENA_ITCM_START	=.;
	} > ARENA_ITCM__

	.ARENA_DTCM__:
	{
						. = ALIGN(32);
		SDK_SECTION_ARENA_DTCM_START	=.;
	} > ARENA_DTCM__
	
	
	############################ OVERLAYDEFS ############################
	.<PROPERTY.OVERLAYDEFS>:
	{
		###  <STATIC.NAME> module information 
		WRITEW ADDR(.<STATIC.NAME>);			# load address
		WRITEW _start;					# entry address
		WRITEW SDK_STATIC_SIZE + SDK_AUTOLOAD_SIZE;	# size of module
		WRITEW _start_AutoloadDoneCallback;		# callback autoload done
		
		###  overlay filename 
		<FOREACH.OVERLAYS>
		WRITES ("<OVERLAY.NAME><PROPERTY.SUFFIX>");	# Overlay <OVERLAY.ID>
		<END.OVERLAYS>
	
	} > <PROPERTY.OVERLAYDEFS>


	############################ OVERLAYTABLE ###########################
	.<PROPERTY.OVERLAYTABLE>:
	{
		<FOREACH.OVERLAYS>
		#	 Overlay <OVERLAY.ID>
		WRITEW <OVERLAY.ID>;				# overlay ID
		WRITEW ADDR(.<OVERLAY.NAME>);			# load address
		WRITEW SDK_OVERLAY_<OVERLAY.NAME>_SIZE;		# size of module
		WRITEW SDK_OVERLAY_<OVERLAY.NAME>_BSS_SIZE;	# size of bss
		WRITEW SDK_OVERLAY_<OVERLAY.NAME>_SINIT_START;	# start address of static init
		WRITEW SDK_OVERLAY_<OVERLAY.NAME>_SINIT_END;	# end address of static init
		WRITEW <OVERLAY.ID>;				# ROM file ID
		WRITEW 0;					# Reserved
		
		<END.OVERLAYS>
		
	} > <PROPERTY.OVERLAYTABLE>
	
	
	############################ OTHERS #################################
	SDK_MAIN_ARENA_LO = SDK_SECTION_ARENA_START;
	SDK_IRQ_STACKSIZE = <STATIC.IRQSTACKSIZE>;	# allocated in DTCM
	SDK_SYS_STACKSIZE = <STATIC.STACKSIZE>;		# when 0 means all remains of DTCM

	# Module filelist
	.MODULE_FILES__:
	{
		WRITES ("<STATIC.NAME><PROPERTY.SUFFIX>");
		WRITES ("<PROPERTY.OVERLAYDEFS><PROPERTY.SUFFIX>");
		WRITES ("<PROPERTY.OVERLAYTABLE><PROPERTY.SUFFIX>");
	} > MODULE_FILES__

	# ITCM/DTCM size checker => check AUTOLOAD_ITCM/DTCM
	.ITCM__:
	{
		. = . + SDK_AUTOLOAD_ITCM_SIZE + SDK_AUTOLOAD_ITCM_BSS_SIZE;
<FOREACH.OVERLAYS=ITCM>
		. = . + SDK_OVERLAY_<OVERLAY.NAME>_SIZE + SDK_OVERLAY_<OVERLAY.NAME>_BSS_SIZE;
<END.OVERLAYS>
	} > ITCM__
	
	SDK_SYS_STACKSIZE_SIGN = (SDK_SYS_STACKSIZE < 0x80000000) * 2 - 1;
	.DTCM__:
	{
		. = . + SDK_AUTOLOAD_DTCM_SIZE + SDK_AUTOLOAD_DTCM_BSS_SIZE;
<FOREACH.OVERLAYS=DTCM>
		. = . + SDK_OVERLAY_<OVERLAY.NAME>_SIZE + SDK_OVERLAY_<OVERLAY.NAME>_BSS_SIZE;
<END.OVERLAYS>
		. = . + SDK_IRQ_STACKSIZE + SDK_SYS_STACKSIZE * SDK_SYS_STACKSIZE_SIGN;
	} > DTCM__

	.COMMON__:
	{
		. = . + SDK_STATIC_TEXT_COMMON_END - SDK_STATIC_TEXT_COMMON_START;
	} > COMMON__

	.PARENT__:
	{
		. = . + SDK_STATIC_TEXT_PARENT_END - SDK_STATIC_TEXT_PARENT_START;
	} > PARENT__

}
