#---------------------------------------------------------------------------
#  Project: NitroSDK - tools - makelcf
#  File: ARM9-TS-cloneboot.lcf.template
#
#  Copyright 2003-2007 Nintendo. All rights reserved.
#
#  These coded instructions, statements, and computer programs contain
#  proprietary information of Nintendo of America Inc. and/or Nintendo
#  Company Ltd., and are protected by Federal copyright law.  They may
#  not be disclosed to third parties or copied or duplicated in any form,
#  in whole or in part, without the prior written consent of Nintendo.
#
#  $Log: ARM9-TS-cloneboot-C.lcf.template,v $
#  Revision 1.24  2007/07/09 12:49:10  yasu
#  Support for TARGET_NAME.
#
#  Revision 1.23  2007/07/09 07:12:55  yasu
#  Support for MAINEX sections.
#
#  Revision 1.22  2007/06/21 00:16:01  yasu
#  Rolled back the MAINEX segment definition.
#
#  Revision 1.21  2007/06/20 10:32:39  yasu
#  Autoload support for C++ constructors and static initializer.
#
#  Revision 1.20  2007/06/19 11:55:13  yasu
#  Added the MAINEX definition in lcf.template.
#
#  Revision 1.19  2007/04/12 00:11:41  yasu
#  Updated copyright year
#
#  Revision 1.18  2007/04/10 14:07:24  yasu
#  Support for multiple SEARCH_SYMBOL's.
#
#  Revision 1.17  2006/07/20 07:29:12  kitase_hirotake
#  Added the description explaining the version section
#
#  Revision 1.16  2006/07/18 11:11:01  yasu
#  Addition of OVERLAY regions has been discontinued because of errors obtaining the size of OVERLAY regions during TCM region overflow checks by check.xTCM, and because there is currently no clear way of calculating this accurately.
#  
#  
#
#  Revision 1.15  2006/05/10 03:19:47  yasu
#  Added support for the CodeWarrior 2.x overlay expansion
#
#  Revision 1.14  2006/04/07 04:45:03  kitase_hirotake
#  Added .itcm.bss/.dtcm.bss
#
#  Revision 1.13  2006/03/30 00:31:29  yasu
#  Revised NUMBER_OVERLAYS to NUMBER.OVERLAYS
#
#  Revision 1.12  2006/03/29 13:19:14  yasu
#  NUMBER_OVERLAYS revised to NUMBER.OVERLAYS
#
#  Revision 1.11  2005/11/24 01:16:47  yada
#  Changed start address of mainEX arena from 0x2400000 to 0x23e0000
#
#  Revision 1.10  2005/09/02 04:14:22  yasu
#  Old symbols were redefined so they can be used even under SDK2.2
#
#  Revision 1.9  2005/08/31 09:34:57  yasu
#  Corrected a problem where code would not function normally when using section names such as section_BSS
#
#  Revision 1.8  2005/08/26 11:22:16  yasu
#  overlay support for ITCM/DTCM
#
#  Revision 1.7  2005/06/20 12:29:20  yasu
#  Changed Surffix to Suffix
#
#  Revision 1.6  2005/06/14 09:03:42  yada
#  Fix specific to negative value of SDK_STACKSIZE
#
#  Revision 1.5  2005/05/19 03:22:51  yosizaki
#  Added .sinit section.
#
#  Revision 1.4  2005/04/13 12:52:03  terui
#  Changed SDK_AUTOLOAD.DTCM.START 0x027c0000 to 0x027e0000
#
#  Revision 1.3  2005/03/30 00:02:14  yosizaki
#  Fixed copyright header.
#
#  Revision 1.2  2005/03/25 12:54:59  yasu
#  Added the .version section
#
#  Revision 1.1  2004/11/24 09:40:22  yasu
#  lcf template for cloneboot
#
#  Revision 1.2  2004/11/05 04:23:38  yasu
#  Added OverlayTable digest
#
#  Revision 1.1  2004/11/05 00:04:13  yasu
#  Added DIGEST
#
#  Revision 1.2  2004/09/24 06:26:28  yasu
#  crt0.o moved into common-A
#
#  Revision 1.1  2004/09/24 06:13:50  yasu
#  Newly created for mb-clone boot
#
#  $NoKeywords: $
#---------------------------------------------------------------------------
MEMORY
{
	<STATIC.NAME>           (RWX) : ORIGIN = <STATIC.ADDRESS>,   LENGTH = 0x0 >  <TARGET.NAME><PROPERTY.SUFFIX>
	<FOREACH.AUTOLOADS>
	<AUTOLOAD.NAME>         (RWX) : ORIGIN = <AUTOLOAD.ADDRESS>, LENGTH = 0x0 >> <TARGET.NAME><PROPERTY.SUFFIX>
	<END.AUTOLOADS>
	binary.AUTOLOAD_INFO		(RWX) : ORIGIN = 0, LENGTH = 0x0 >> <TARGET.NAME><PROPERTY.SUFFIX>
	binary.STATIC_FOOTER		(RWX) : ORIGIN = 0, LENGTH = 0x0 >> <TARGET.NAME><PROPERTY.SUFFIX>
	
	<PROPERTY.OVERLAYDEFS>	(RW)  : ORIGIN = AFTER(<STATIC.NAME>), LENGTH = 0x0 > <PROPERTY.OVERLAYDEFS><PROPERTY.SUFFIX>
	<PROPERTY.OVERLAYTABLE>	(RW)  : ORIGIN = AFTER(<STATIC.NAME>), LENGTH = 0x0 > <PROPERTY.OVERLAYTABLE><PROPERTY.SUFFIX>
	<FOREACH.OVERLAYS>
	<OVERLAY.NAME>          (RWXO): ORIGIN = <OVERLAY.ADDRESS>, LENGTH = 0x0 > <TARGET.NAME=%_ov_><OVERLAY.NAME><PROPERTY.SUFFIX>
	<END.OVERLAYS>
	dummy.MAIN_EX		(RW)  : ORIGIN = 0x023e0000, LENGTH = 0x0
	arena.MAIN			(RW)  : ORIGIN = AFTER(<STATIC.NAME><FOREACH.OVERLAYS=MAIN>,<OVERLAY.NAME><END.OVERLAYS>), LENGTH = 0x0
	arena.MAIN_EX		(RW)  : ORIGIN = AFTER(dummy.MAIN_EX<IF.EXIST.AUTOLOAD.MAINEX=,MAINEX><FOREACH.OVERLAYS=MAINEX>,<OVERLAY.NAME><END.OVERLAYS>), LENGTH = 0x0
	arena.ITCM		(RW)  : ORIGIN = AFTER(ITCM<FOREACH.OVERLAYS=ITCM>,<OVERLAY.NAME><END.OVERLAYS>), LENGTH = 0x0
	arena.DTCM		(RW)  : ORIGIN = AFTER(DTCM<FOREACH.OVERLAYS=DTCM>,<OVERLAY.NAME><END.OVERLAYS>), LENGTH = 0x0
	binary.MODULE_FILES		(RW)  : ORIGIN = 0x0, LENGTH = 0x0     > <TARGET.NAME=%_>component.files
	check.ITCM			(RWX) : ORIGIN = 0x0, LENGTH = 0x08000 > <TARGET.NAME=%_>itcm.check
	check.DTCM			(RW)  : ORIGIN = 0x0, LENGTH = 0x04000 > <TARGET.NAME=%_>dtcm.check
	COMMON__		(RW)  : ORIGIN = 0x0, LENGTH = 0x01000 > <TARGET.NAME=%_>common.check
	PARENT__		(RW)  : ORIGIN = 0x0, LENGTH = 0x02000 > <TARGET.NAME=%_>parent.check
}

FORCE_ACTIVE
{
	SVC_SoftReset
}

KEEP_SECTION
{
	.sinit
}

SECTIONS
{
	############################ STATIC #################################
	.<STATIC.NAME>:
	{
	ALIGNALL(4);			. = ALIGN(32);	# Fit to cache line
					<IF.NITRO_LCFSPEC.GE.2>
					<FOREACH.STATIC.SEARCHSYMBOLS><IF.STATIC.SEARCHSYMBOL.FIRST=SEARCH_SYMBOL :,><STATIC.SEARCHSYMBOL><IF.STATIC.SEARCHSYMBOL.LAST=;><END.STATIC.SEARCHSYMBOLS>
					<ENDIF>
	#
	#  TEXT BLOCK: READ ONLY
	#
	SDK_STATIC_START		=.;
	SDK_STATIC_TEXT_START		=.;
					#:::::::::: text/rodata
					
					#:: Common A ----- 4KB
	SDK_STATIC_TEXT_COMMON_START	=.;
					libsyscall.a (.text)
					crt0.o (.text)
					crt0.o (.rodata)
					#
					# Adding .version section.
					# The information included in this section will be required during lot check, so this position must be kept.
					# 
					#
					* (.version)
	SDK_STATIC_TEXT_COMMON_END	=.;
					.= SDK_STATIC_START +  4 * 1024;
					
					#:: Parent Only -- 8KB
	SDK_STATIC_TEXT_PARENT_START	=.;
	#
	# Collected .parent section code
	# Notice that .bss, .data section code is not included!
					* (.parent)
	#
	SDK_STATIC_TEXT_PARENT_END	=.;
					.= SDK_STATIC_START + 12 * 1024;
					
					#:: Common B ----- 4KB + ...
					OBJECT(NitroMain,*)
					<FOREACH.STATIC.OBJECTS=.text>
					<STATIC.OBJECT=.text:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.text>
					<STATIC.LIBRARY=.text:t>
					<END.STATIC.LIBRARIES>
					. = ALIGN(4);
					* (.exception)
					. = ALIGN(4);
	SDK_STATIC_ETABLE_START		=.;
					EXCEPTION
	SDK_STATIC_ETABLE_END		=.;
					. = ALIGN(4);
					<FOREACH.STATIC.OBJECTS=.init>
					<STATIC.OBJECT=.init:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.init>
					<STATIC.LIBRARY=.init:t>
					<END.STATIC.LIBRARIES>
					. = ALIGN(4);
					<FOREACH.STATIC.OBJECTS=.rodata>
					<STATIC.OBJECT=.rodata:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.rodata>
					<STATIC.LIBRARY=.rodata:t>
					<END.STATIC.LIBRARIES>
					. = ALIGN(4);

	SDK_STATIC_SINIT_START		=.;
					#:::::::::: ctor
					<FOREACH.STATIC.OBJECTS=.ctor>
					<STATIC.OBJECT=.ctor:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.ctor>
					<STATIC.LIBRARY=.ctor:t>
					<END.STATIC.LIBRARIES>
					<FOREACH.STATIC.OBJECTS=.sinit>
					<STATIC.OBJECT=.sinit:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.sinit>
					<STATIC.LIBRARY=.sinit:t>
					<END.STATIC.LIBRARIES>
					<FOREACH.AUTOLOADS>
						<FOREACH.AUTOLOAD.OBJECTS=.ctor>
						<AUTOLOAD.OBJECT=.ctor:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.ctor>
						<AUTOLOAD.LIBRARY=.ctor:t>
						<END.AUTOLOAD.LIBRARIES>
						<FOREACH.AUTOLOAD.OBJECTS=.sinit>
						<AUTOLOAD.OBJECT=.sinit:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.sinit>
						<AUTOLOAD.LIBRARY=.sinit:t>
						<END.AUTOLOAD.LIBRARIES>
					<END.AUTOLOADS>
					WRITEW	0;
					#:::::::::: ctor
	SDK_STATIC_SINIT_END		=.;

					#:::::::::: text/rodata
					. = ALIGN(32);
	SDK_STATIC_TEXT_END		=.;
	
	#
	#  DATA BLOCK: READ WRITE
	#
	SDK_STATIC_DATA_START		=.;
					#:::::::::: data
					<FOREACH.STATIC.OBJECTS=.sdata>
					<STATIC.OBJECT=.sdata:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.sdata>
					<STATIC.LIBRARY=.sdata:t>
					<END.STATIC.LIBRARIES>
					. = ALIGN(4);
					<FOREACH.STATIC.OBJECTS=.data>
					<STATIC.OBJECT=.data:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.data>
					<STATIC.LIBRARY=.data:t>
					<END.STATIC.LIBRARIES>
					. = ALIGN(4);

	SDK_OVERLAYTABLE_DIGEST		=.;
					. = . + 20;
	SDK_OVERLAYTABLE_DIGEST_END	=.;
	SDK_OVERLAY_DIGEST		=.;
					. = . + <NUMBER.OVERLAYS> * 20;
	SDK_OVERLAY_DIGEST_END		=.;

					#:::::::::: data
					. = ALIGN(32);
	SDK_STATIC_DATA_END		=.;
	SDK_STATIC_END			=.;

	SDK_STATIC_TEXT_SIZE		= SDK_STATIC_TEXT_END - SDK_STATIC_TEXT_START;
	SDK_STATIC_DATA_SIZE		= SDK_STATIC_DATA_END - SDK_STATIC_DATA_START;
	SDK_STATIC_SIZE			= SDK_STATIC_END      - SDK_STATIC_START;
	__sinit__			= SDK_STATIC_SINIT_START;	# for static initializer
	__exception_table_start__	= SDK_STATIC_ETABLE_START;	# for exception table
	__exception_table_end__		= SDK_STATIC_ETABLE_END;	# for exception table
	} > <STATIC.NAME>

	.<STATIC.NAME>.bss:
	{
	ALIGNALL(4);			. = ALIGN(32);
					<IF.NITRO_LCFSPEC.GE.2>
					<FOREACH.STATIC.SEARCHSYMBOLS><IF.STATIC.SEARCHSYMBOL.FIRST=SEARCH_SYMBOL :,><STATIC.SEARCHSYMBOL><IF.STATIC.SEARCHSYMBOL.LAST=;><END.STATIC.SEARCHSYMBOLS>
					<ENDIF>
	#
	#  BSS BLOCK
	#
	SDK_STATIC_BSS_START		=.;
					#:::::::::: bss
					<FOREACH.STATIC.OBJECTS=.sbss>
					<STATIC.OBJECT=.sbss:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.sbss>
					<STATIC.LIBRARY=.sbss:t>
					<END.STATIC.LIBRARIES>
					. = ALIGN(4);
					<FOREACH.STATIC.OBJECTS=.bss>
					<STATIC.OBJECT=.bss:t>
					<END.STATIC.OBJECTS>
					<FOREACH.STATIC.LIBRARIES=.bss>
					<STATIC.LIBRARY=.bss:t>
					<END.STATIC.LIBRARIES>
					. = ALIGN(4);
					#:::::::::: bss
					. = ALIGN(32);
	SDK_STATIC_BSS_END		= .;
	SDK_STATIC_BSS_SIZE		= SDK_STATIC_BSS_END - SDK_STATIC_BSS_START;

	} >> <STATIC.NAME>
	
	
	############################ AUTOLOADS ##############################
	SDK_AUTOLOAD.ITCM.START			= 0x01ff8000;
	SDK_AUTOLOAD.ITCM.END			= SDK_AUTOLOAD.ITCM.START;
	SDK_AUTOLOAD.ITCM.BSS_END		= SDK_AUTOLOAD.ITCM.START;
	SDK_AUTOLOAD.ITCM.SIZE			= 0;
	SDK_AUTOLOAD.ITCM.BSS_SIZE		= 0;
	SDK_AUTOLOAD.DTCM.START			= 0x027e0000;
	SDK_AUTOLOAD.DTCM.END			= SDK_AUTOLOAD.DTCM.START;
	SDK_AUTOLOAD.DTCM.BSS_END		= SDK_AUTOLOAD.DTCM.START;
	SDK_AUTOLOAD.DTCM.SIZE			= 0;
	SDK_AUTOLOAD.DTCM.BSS_SIZE		= 0;
	SDK_AUTOLOAD_START			= SDK_STATIC_END;
	SDK_AUTOLOAD_SIZE			= 0;
	SDK_AUTOLOAD_NUMBER			= <NUMBER.AUTOLOADS>;

<FOREACH.AUTOLOADS>
	.<AUTOLOAD.NAME>:
	{
	ALIGNALL(4);				. = ALIGN(32);
						<IF.NITRO_LCFSPEC.GE.2>
						<FOREACH.AUTOLOAD.SEARCHSYMBOLS><IF.AUTOLOAD.SEARCHSYMBOL.FIRST=SEARCH_SYMBOL :,><AUTOLOAD.SEARCHSYMBOL><IF.AUTOLOAD.SEARCHSYMBOL.LAST=;><END.AUTOLOAD.SEARCHSYMBOLS>
						<ENDIF>
	#
	#   TEXT BLOCK: READ ONLY
	#
	SDK_AUTOLOAD_<AUTOLOAD.NAME>_ID		=<AUTOLOAD.ID>;
	SDK_AUTOLOAD.<AUTOLOAD.NAME>.ID		=<AUTOLOAD.ID>;
	SDK_AUTOLOAD.<AUTOLOAD.NAME>.START	=.;
	SDK_AUTOLOAD.<AUTOLOAD.NAME>.TEXT_START	=.;
						#:::::::::: text/rodata
						<FOREACH.AUTOLOAD.OBJECTS=.text>
						<AUTOLOAD.OBJECT=.text:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.text>
						<AUTOLOAD.LIBRARY=.text:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.AUTOLOAD.OBJECTS=.itcm>
						<AUTOLOAD.OBJECT=.itcm:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.itcm>
						<AUTOLOAD.LIBRARY=.itcm:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.AUTOLOAD.OBJECTS=.init>
						<AUTOLOAD.OBJECT=.init:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.init>
						<AUTOLOAD.LIBRARY=.init:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.AUTOLOAD.OBJECTS=.rodata>
						<AUTOLOAD.OBJECT=.rodata:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.rodata>
						<AUTOLOAD.LIBRARY=.rodata:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						#:::::::::: text/rodata
	SDK_AUTOLOAD.<AUTOLOAD.NAME>.TEXT_END	=.;

	#
	#  DATA BLOCK: READ WRITE BLOCK
	#
	SDK_AUTOLOAD.<AUTOLOAD.NAME>.DATA_START	=.;
						#:::::::::: data
						<FOREACH.AUTOLOAD.OBJECTS=.sdata>
						<AUTOLOAD.OBJECT=.sdata:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.sdata>
						<AUTOLOAD.LIBRARY=.sdata:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.AUTOLOAD.OBJECTS=.data>
						<AUTOLOAD.OBJECT=.data:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.data>
						<AUTOLOAD.LIBRARY=.data:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.AUTOLOAD.OBJECTS=.dtcm>
						<AUTOLOAD.OBJECT=.dtcm:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.dtcm>
						<AUTOLOAD.LIBRARY=.dtcm:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						#:::::::::: data
						. = ALIGN(32);
	SDK_AUTOLOAD.<AUTOLOAD.NAME>.DATA_END	=.;
	SDK_AUTOLOAD.<AUTOLOAD.NAME>.END	=.;
	
	SDK_AUTOLOAD.<AUTOLOAD.NAME>.TEXT_SIZE	= SDK_AUTOLOAD.<AUTOLOAD.NAME>.TEXT_END - SDK_AUTOLOAD.<AUTOLOAD.NAME>.TEXT_START;
	SDK_AUTOLOAD.<AUTOLOAD.NAME>.DATA_SIZE	= SDK_AUTOLOAD.<AUTOLOAD.NAME>.DATA_END - SDK_AUTOLOAD.<AUTOLOAD.NAME>.DATA_START;
	SDK_AUTOLOAD.<AUTOLOAD.NAME>.SIZE	= SDK_AUTOLOAD.<AUTOLOAD.NAME>.END      - SDK_AUTOLOAD.<AUTOLOAD.NAME>.START;
	SDK_AUTOLOAD_SIZE			= SDK_AUTOLOAD_SIZE + SDK_AUTOLOAD.<AUTOLOAD.NAME>.SIZE;

	} > <AUTOLOAD.NAME>

	.<AUTOLOAD.NAME>.bss:
	{
	ALIGNALL(4);				. = ALIGN(32);
						<IF.NITRO_LCFSPEC.GE.2>
						<FOREACH.AUTOLOAD.SEARCHSYMBOLS><IF.AUTOLOAD.SEARCHSYMBOL.FIRST=SEARCH_SYMBOL :,><AUTOLOAD.SEARCHSYMBOL><IF.AUTOLOAD.SEARCHSYMBOL.LAST=;><END.AUTOLOAD.SEARCHSYMBOLS>
						<ENDIF>
	#
	#  BSS BLOCK
	#
	SDK_AUTOLOAD.<AUTOLOAD.NAME>.BSS_START	= .;
						#:::::::::: bss
						<FOREACH.AUTOLOAD.OBJECTS=.sbss>
						<AUTOLOAD.OBJECT=.sbss:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.sbss>
						<AUTOLOAD.LIBRARY=.sbss:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.AUTOLOAD.OBJECTS=.bss>
						<AUTOLOAD.OBJECT=.bss:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.bss>
						<AUTOLOAD.LIBRARY=.bss:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.AUTOLOAD.OBJECTS=.dtcm>
						<AUTOLOAD.OBJECT=.dtcm.bss:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.dtcm>
						<AUTOLOAD.LIBRARY=.dtcm.bss:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.AUTOLOAD.OBJECTS=.itcm>
						<AUTOLOAD.OBJECT=.itcm.bss:t>
						<END.AUTOLOAD.OBJECTS>
						<FOREACH.AUTOLOAD.LIBRARIES=.itcm>
						<AUTOLOAD.LIBRARY=.itcm.bss:t>
						<END.AUTOLOAD.LIBRARIES>
						. = ALIGN(4);
						#:::::::::: bss
						. = ALIGN(32);
	SDK_AUTOLOAD.<AUTOLOAD.NAME>.BSS_END	= .;

	SDK_AUTOLOAD.<AUTOLOAD.NAME>.BSS_SIZE	= SDK_AUTOLOAD.<AUTOLOAD.NAME>.BSS_END - SDK_AUTOLOAD.<AUTOLOAD.NAME>.BSS_START;

	} >> <AUTOLOAD.NAME>

<END.AUTOLOADS>

	SDK_AUTOLOAD_ITCM_START			= SDK_AUTOLOAD.ITCM.START;
	SDK_AUTOLOAD_ITCM_END			= SDK_AUTOLOAD.ITCM.END;
	SDK_AUTOLOAD_ITCM_BSS_END		= SDK_AUTOLOAD.ITCM.BSS_END;
	SDK_AUTOLOAD_ITCM_SIZE			= SDK_AUTOLOAD.ITCM.SIZE;
	SDK_AUTOLOAD_ITCM_BSS_SIZE		= SDK_AUTOLOAD.ITCM.BSS_SIZE;
	SDK_AUTOLOAD_DTCM_START			= SDK_AUTOLOAD.DTCM.START;
	SDK_AUTOLOAD_DTCM_END			= SDK_AUTOLOAD.DTCM.END;
	SDK_AUTOLOAD_DTCM_BSS_END		= SDK_AUTOLOAD.DTCM.BSS_END;
	SDK_AUTOLOAD_DTCM_SIZE			= SDK_AUTOLOAD.DTCM.SIZE;
	SDK_AUTOLOAD_DTCM_BSS_SIZE		= SDK_AUTOLOAD.DTCM.BSS_SIZE;

	############################ AUTOLOAD_INFO ##########################
	.binary.AUTOLOAD_INFO:
	{
<FOREACH.AUTOLOADS>
		WRITEW ADDR(.<AUTOLOAD.NAME>);
		WRITEW SDK_AUTOLOAD.<AUTOLOAD.NAME>.SIZE;
		WRITEW SDK_AUTOLOAD.<AUTOLOAD.NAME>.BSS_SIZE;
<END.AUTOLOADS>
	} > binary.AUTOLOAD_INFO
	
	SDK_AUTOLOAD_LIST			= SDK_AUTOLOAD_START + SDK_AUTOLOAD_SIZE;
	SDK_AUTOLOAD_LIST_END			= SDK_AUTOLOAD_START + SDK_AUTOLOAD_SIZE + SIZEOF(.binary.AUTOLOAD_INFO);
	SDK_AUTOLOAD_SIZE			= SDK_AUTOLOAD_SIZE  + SIZEOF(.binary.AUTOLOAD_INFO);
	
	############################ STATIC_FOOTER ##########################
	.binary.STATIC_FOOTER:
	{
		WRITEW 0xdec00621;		# LE(0x2106C0DE) = NITRO CODE
		WRITEW _start_ModuleParams - ADDR(.<STATIC.NAME>);
		WRITEW SDK_OVERLAY_DIGEST  - ADDR(.<STATIC.NAME>);
	} > binary.STATIC_FOOTER
	
	############################ OVERLAYS ###############################
	SDK_OVERLAY_NUMBER 			= <NUMBER.OVERLAYS>;

<FOREACH.OVERLAYS>
	.<OVERLAY.NAME>:<IF.NITRO_LCFSPEC.GE.2><OVERLAY.NAME><ENDIF>
	{
	ALIGNALL(4);				. = ALIGN(32);
						<IF.NITRO_LCFSPEC.GE.2>
						<FOREACH.OVERLAY.SEARCHSYMBOLS><IF.OVERLAY.SEARCHSYMBOL.FIRST=SEARCH_SYMBOL :,><OVERLAY.SEARCHSYMBOL><IF.OVERLAY.SEARCHSYMBOL.LAST=;><END.OVERLAY.SEARCHSYMBOLS>
						<ENDIF>
	#
	#   TEXT BLOCK: READ ONLY
	#
	SDK_OVERLAY_<OVERLAY.NAME>_ID		=<OVERLAY.ID>;	### SEGMENT <OVERLAY.NAME> OVERLAY ID
	SDK_OVERLAY.<OVERLAY.NAME>.ID		=<OVERLAY.ID>;
	SDK_OVERLAY.<OVERLAY.NAME>.START	=.;
	SDK_OVERLAY.<OVERLAY.NAME>.TEXT_START	=.;
						#:::::::::: text/rodata
						<FOREACH.OVERLAY.OBJECTS=.text>
						<OVERLAY.OBJECT=.text:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.text>
						<OVERLAY.LIBRARY=.text:t>
						<END.OVERLAY.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.OVERLAY.OBJECTS=.rodata>
						<OVERLAY.OBJECT=.rodata:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.rodata>
						<OVERLAY.LIBRARY=.rodata:t>
						<END.OVERLAY.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.OVERLAY.OBJECTS=.init>
						<OVERLAY.OBJECT=.init:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.init>
						<OVERLAY.LIBRARY=.init:t>
						<END.OVERLAY.LIBRARIES>
						. = ALIGN(4);
	SDK_OVERLAY.<OVERLAY.NAME>.SINIT_START	=.;
						#:::::::::: ctor
						<FOREACH.OVERLAY.OBJECTS=.ctor>
						<OVERLAY.OBJECT=.ctor:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.ctor>
						<OVERLAY.LIBRARY=.ctor:t>
						<END.OVERLAY.LIBRARIES>
						<FOREACH.OVERLAY.OBJECTS=.sinit>
						<OVERLAY.OBJECT=.sinit:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.sinit>
						<OVERLAY.LIBRARY=.sinit:t>
						<END.OVERLAY.LIBRARIES>
						WRITEW	0;
						#:::::::::: ctor
	SDK_OVERLAY.<OVERLAY.NAME>.SINIT_END	=.;

						#:::::::::: text/rodata
						. = ALIGN(32);
	SDK_OVERLAY.<OVERLAY.NAME>.TEXT_END	=.;

	#
	#  DATA BLOCK: READ WRITE
	#
	SDK_OVERLAY.<OVERLAY.NAME>.DATA_START	=.;
						#:::::::::: data
						<FOREACH.OVERLAY.OBJECTS=.sdata>
						<OVERLAY.OBJECT=.sdata:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.sdata>
						<OVERLAY.LIBRARY=.sdata:t>
						<END.OVERLAY.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.OVERLAY.OBJECTS=.data>
						<OVERLAY.OBJECT=.data:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.data>
						<OVERLAY.LIBRARY=.data:t>
						<END.OVERLAY.LIBRARIES>
						. = ALIGN(4);
						#:::::::::: data
						. = ALIGN(32);
	SDK_OVERLAY.<OVERLAY.NAME>.DATA_END	=.;
	SDK_OVERLAY.<OVERLAY.NAME>.END		=.;

	SDK_OVERLAY.<OVERLAY.NAME>.TEXT_SIZE	= SDK_OVERLAY.<OVERLAY.NAME>.TEXT_END - SDK_OVERLAY.<OVERLAY.NAME>.TEXT_START;
	SDK_OVERLAY.<OVERLAY.NAME>.DATA_SIZE	= SDK_OVERLAY.<OVERLAY.NAME>.DATA_END - SDK_OVERLAY.<OVERLAY.NAME>.DATA_START;
	SDK_OVERLAY.<OVERLAY.NAME>.SIZE		= SDK_OVERLAY.<OVERLAY.NAME>.END      - SDK_OVERLAY.<OVERLAY.NAME>.START;

	} > <OVERLAY.NAME>

	.<OVERLAY.NAME>.bss:<IF.NITRO_LCFSPEC.GE.2><OVERLAY.NAME><ENDIF>
	{
	ALIGNALL(4);				. = ALIGN(32);
						<IF.NITRO_LCFSPEC.GE.2>
						<FOREACH.OVERLAY.SEARCHSYMBOLS><IF.OVERLAY.SEARCHSYMBOL.FIRST=SEARCH_SYMBOL :,><OVERLAY.SEARCHSYMBOL><IF.OVERLAY.SEARCHSYMBOL.LAST=;><END.OVERLAY.SEARCHSYMBOLS>
						<ENDIF>
	#
	#  BSS BLOCK
	#
	SDK_OVERLAY.<OVERLAY.NAME>.BSS_START	= .;
						#:::::::::: bss
						<FOREACH.OVERLAY.OBJECTS=.bss>
						<OVERLAY.OBJECT=.bss:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.bss>
						<OVERLAY.LIBRARY=.bss:t>
						<END.OVERLAY.LIBRARIES>
						. = ALIGN(4);
						<FOREACH.OVERLAY.OBJECTS=.sbss>
						<OVERLAY.OBJECT=.sbss:t>
						<END.OVERLAY.OBJECTS>
						<FOREACH.OVERLAY.LIBRARIES=.sbss>
						<OVERLAY.LIBRARY=.sbss:t>
						<END.OVERLAY.LIBRARIES>
						. = ALIGN(4);
						#:::::::::: bss
						. = ALIGN(32);
	SDK_OVERLAY.<OVERLAY.NAME>.BSS_END	= .;

	SDK_OVERLAY.<OVERLAY.NAME>.BSS_SIZE	= SDK_OVERLAY.<OVERLAY.NAME>.BSS_END - SDK_OVERLAY.<OVERLAY.NAME>.BSS_START;
	
	} >> <OVERLAY.NAME>

<END.OVERLAYS>
	
	
	############################ MAIN EX ##################################
	.dummy.MAIN_EX:
	{
		. = ALIGN(32);
	} > dummy.MAIN_EX
	
	
	############################ ARENA ##################################
	.arena.MAIN:
	{
						. = ALIGN(32);
		SDK_SECTION_ARENA_START		=.;
	} > arena.MAIN
	
	.arena.MAIN_EX:
	{
						. = ALIGN(32);
		SDK_SECTION_ARENA_EX_START	=.;
	} > arena.MAIN_EX
	
	.arena.ITCM:
	{
						. = ALIGN(32);
		SDK_SECTION_ARENA_ITCM_START	=.;
	} > arena.ITCM

	.arena.DTCM:
	{
						. = ALIGN(32);
		SDK_SECTION_ARENA_DTCM_START	=.;
	} > arena.DTCM
	
	
	############################ OVERLAYDEFS ############################
	.<PROPERTY.OVERLAYDEFS>:
	{
		###  <STATIC.NAME> module information 
		WRITEW ADDR(.<STATIC.NAME>);			# load address
		WRITEW _start;					# entry address
		WRITEW SDK_STATIC_SIZE + SDK_AUTOLOAD_SIZE;	# size of module
		WRITEW _start_AutoloadDoneCallback;		# callback autoload done
		
		###  overlay filename 
		<FOREACH.OVERLAYS>
		WRITES ("<TARGET.NAME=%_ov_><OVERLAY.NAME><PROPERTY.SUFFIX>");	# Overlay <OVERLAY.ID>
		<END.OVERLAYS>
	
	} > <PROPERTY.OVERLAYDEFS>


	############################ OVERLAYTABLE ###########################
	.<PROPERTY.OVERLAYTABLE>:
	{
		<FOREACH.OVERLAYS>
		#	 Overlay <OVERLAY.ID>
		WRITEW <OVERLAY.ID>;				# overlay ID
		WRITEW ADDR(.<OVERLAY.NAME>);			# load address
		WRITEW SDK_OVERLAY.<OVERLAY.NAME>.SIZE;		# size of module
		WRITEW SDK_OVERLAY.<OVERLAY.NAME>.BSS_SIZE;	# size of bss
		WRITEW SDK_OVERLAY.<OVERLAY.NAME>.SINIT_START;	# start address of static init
		WRITEW SDK_OVERLAY.<OVERLAY.NAME>.SINIT_END;	# end address of static init
		WRITEW <OVERLAY.ID>;				# ROM file ID
		WRITEW 0;					# Reserved
		
		<END.OVERLAYS>
		
	} > <PROPERTY.OVERLAYTABLE>
	
	
	############################ OTHERS #################################
	SDK_MAIN_ARENA_LO = SDK_SECTION_ARENA_START;
	SDK_IRQ_STACKSIZE = <STATIC.IRQSTACKSIZE>;	# allocated in DTCM
	SDK_SYS_STACKSIZE = <STATIC.STACKSIZE>;		# when 0 means all remains of DTCM

	# Module filelist
	.binary.MODULE_FILES:
	{
		WRITES ("<TARGET.NAME><PROPERTY.SUFFIX>");
		WRITES ("<PROPERTY.OVERLAYDEFS><PROPERTY.SUFFIX>");
		WRITES ("<PROPERTY.OVERLAYTABLE><PROPERTY.SUFFIX>");
	} > binary.MODULE_FILES

	# ITCM/DTCM size checker => check AUTOLOAD_ITCM/DTCM
	.check.ITCM:
	{
		. = . + SDK_AUTOLOAD_ITCM_SIZE + SDK_AUTOLOAD_ITCM_BSS_SIZE;
	} > check.ITCM
	
	SDK_SYS_STACKSIZE_SIGN = (SDK_SYS_STACKSIZE < 0x80000000) * 2 - 1;
	.check.DTCM:
	{
		. = . + SDK_AUTOLOAD_DTCM_SIZE + SDK_AUTOLOAD_DTCM_BSS_SIZE;
		. = . + SDK_IRQ_STACKSIZE + SDK_SYS_STACKSIZE * SDK_SYS_STACKSIZE_SIGN;
	} > check.DTCM

	.COMMON__:
	{
		. = . + SDK_STATIC_TEXT_COMMON_END - SDK_STATIC_TEXT_COMMON_START;
	} > COMMON__

	.PARENT__:
	{
		. = . + SDK_STATIC_TEXT_PARENT_END - SDK_STATIC_TEXT_PARENT_START;
	} > PARENT__

}
